<?php

namespace Kunstmaan\PagePartBundle\Tests\Entity;

use Kunstmaan\PagePartBundle\Entity\PagePartRef;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-13 at 12:46:20.
 */
class PagePartRefTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PagePartRef
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PagePartRef();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    private function getEntityManagerMock()
    {
        $em = $this->getMockBuilder('Doctrine\ORM\EntityManager')
            ->disableOriginalConstructor()
            ->getMock();

        return $em;
    }

    private function getRepositoryMock()
    {
        $repo = $this->getMockBuilder('Doctrine\ORM\EntityRepository')
            ->disableOriginalConstructor()
            ->getMock();

        return $repo;
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getId
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setId
     */
    public function testGetSetId()
    {
        $this->object->setId(123);
        $this->assertEquals(123, $this->object->getId());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getPageId
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setPageId
     */
    public function testGetSetPageId()
    {
        $this->object->setPageId(123);
        $this->assertEquals(123, $this->object->getPageId());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getPageEntityname
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setPageEntityname
     */
    public function testGetSetPageEntityname()
    {
        $this->object->setPageEntityname('ABundle:APageEntity');
        $this->assertEquals('ABundle:APageEntity', $this->object->getPageEntityname());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getContext
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setContext
     */
    public function testGetSetContext()
    {
        $this->object->setContext('AContext');
        $this->assertEquals('AContext', $this->object->getContext());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getSequencenumber
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setSequencenumber
     */
    public function testGetSetSequencenumber()
    {
        $this->object->setSequencenumber(2);
        $this->assertEquals(2, $this->object->getSequencenumber());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getPagePartId
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setPagePartId
     */
    public function testGetSetPagePartId()
    {
        $this->object->setPagePartId(50);
        $this->assertEquals(50, $this->object->getPagePartId());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getPagePartEntityname
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setPagePartEntityname
     */
    public function testGetSetPagePartEntityname()
    {
        $this->object->setPagePartEntityname('ABundle:APagePartEntity');
        $this->assertEquals('ABundle:APagePartEntity', $this->object->getPagePartEntityname());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getCreated
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setCreated
     */
    public function testGetSetCreated()
    {
        $now = new \DateTime();
        $this->object->setCreated($now);
        $this->assertEquals($now, $this->object->getCreated());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getUpdated
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::setUpdated
     */
    public function testGetSetUpdated()
    {
        $now = new \DateTime();
        $this->object->setUpdated($now);
        $this->assertEquals($now, $this->object->getUpdated());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::__toString
     */
    public function test__toString()
    {
        $this->object->setContext('AContext');
        $this->assertEquals('pagepartref in context AContext', $this->object->__toString());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\PagePartRef::getPagePart
     */
    public function testGetPagePart()
    {
        $em       = $this->getEntityManagerMock();
        $repo     = $this->getRepositoryMock();
        $pagePart = $this->getMock('Kunstmaan\PagePartBundle\Helper\PagePartInterface');
        $this->object->setPagePartEntityName('ABundle:APagePartEntity')->setPagePartId(3);

        $em->expects($this->once())
            ->method('getRepository')
            ->with('ABundle:APagePartEntity')
            ->will($this->returnValue($repo));

        $repo->expects($this->once())
            ->method('find')
            ->with(3)
            ->will($this->returnValue($pagePart));

        $this->assertEquals($pagePart, $this->object->getPagePart($em));
    }
}
